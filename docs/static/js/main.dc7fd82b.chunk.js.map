{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","idx","GitExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAC1B,EAAoCC,mBAAS,cAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,4BAAOA,GAAP,CAAYP,OAC/BC,EAAc,MAMlB,SACI,uBAAOO,KAAK,OACZC,MAAOT,EACPU,SAjBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCHlBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAClC,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACrB,kCAAMA,S,uBCNHK,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,0FAC2EO,UAAUF,GADrF,sBAEDG,MAAMR,GAFL,cAEbS,EAFa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHhB,GAAKgB,EAAIhB,GACTC,MAAQe,EAAIf,MACZC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAYZY,GAZY,4CAAH,sDCGTK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SACrB,ECDwB,SAACA,GACzB,MAA0BrB,mBAC1B,CAAE2B,KAAK,GACNO,SAAU,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACRjB,EAASC,GAAUiB,MAAM,SAAAC,GACvBC,YAAW,WACPJ,EAAS,CAAET,KAAKY,EACZL,SAAU,MAER,UAGZ,CAACb,IAEIc,EDhBuBM,CAAapB,GAA/BU,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAIpB,OACI,qCACC,qBAAKjB,UAAU,wCAAf,cAA0DI,KACxDa,GAAW,2CACd,qBAAKjB,UAAU,YAAf,SAGSc,EAAOF,KAAK,SAACC,EAAKY,GAAN,OAEP,cAAC,EAAD,eAA8BZ,GAAZA,EAAIhB,aEb/B6B,EAAe,WAEzB,MAAmC3C,mBAAS,CAAC,cAA7C,mBAAO4C,EAAP,KAAkB7C,EAAlB,KAEA,OACK,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAED,6BAEM6C,EAAWf,KAAK,SAACgB,EAAKH,GAAN,OACZ,cAAC,EAAD,CAASrB,SAAWwB,GAAW,WAAWH,Y,MCZ/DI,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.dc7fd82b.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ( {setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('Hola Mundo');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats =>[...cats,inputValue]);\r\n            setInputValue('');\r\n        }\r\n        \r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}> \r\n            <input type=\"text\" \r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            ></input>\r\n        </form>\r\n    );\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\">\r\n            <img src={url} alt={title}></img>\r\n           <p> { title}</p> \r\n        </div>\r\n    )\r\n}\r\n"," export const getGifts = async(category) =>{\r\n      const url =`https://api.giphy.com/v1/gifs/search?api_key=GHCTwOgaC4zQALJHZhbSwzT50fnxy83m&q=${encodeURI(category)}&limit=10`\r\n      const resp= await fetch(url);\r\n    \r\n      const {data} = await resp.json();\r\n      const gifs = data.map( img =>{\r\n          return {\r\n              id : img.id,\r\n              title : img.title,\r\n              url: img.images?.downsized_medium.url\r\n            }\r\n      })\r\n      return gifs;\r\n    }","import React, {useState,useEffect} from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images, loading} =useFetchGifs(category);\r\n   \r\n   \r\n   \r\n    return (\r\n        <>\r\n         <h3  className=\"animate__animated animate__fadeInLeft\"> { category }</h3>\r\n         { loading && <p>Loading...</p> }\r\n        <div className=\"card-grid\">\r\n           \r\n            {\r\n                 images.map( (img, idx) => (\r\n                   \r\n                      <GifGridItem key={img.id} {...img}></GifGridItem>\r\n                      )\r\n                )  \r\n               }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import  {useState,useEffect} from 'react'\r\nimport { getGifts } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState(\r\n    { data:[],\r\n     loading : true\r\n    });\r\n\r\n    useEffect(()=>{\r\n      getGifts(category).then( imgs =>{\r\n        setTimeout(() => {\r\n            setstate({ data:imgs,\r\n                loading : false\r\n               });\r\n               }, 3000)\r\n         \r\n      });\r\n    },[category]);\r\n    \r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n   // const categoties = ['One Punch', 'Samurai x', 'Dragon Ball'];\r\n   const [categories,setCategories] = useState(['One Punch']);\r\n   \r\n   return(\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}></AddCategory>\r\n           \r\n            <hr />\r\n           \r\n           <ol>\r\n               {\r\n                 categories.map( (cat, idx) => (\r\n                     <GifGrid category={ cat } key={'category'+idx} ></GifGrid>\r\n                     // <li key={'category'+idx}>{cat}</li>\r\n                      )\r\n                )  \r\n               }\r\n              \r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from './GitExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}